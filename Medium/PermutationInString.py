# Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1.
# In other words, one of the first string's permutations is the substring of the second string.

class Solution(object):
    def checkInclusion(self, s1, s2):
        """
        :type s1: str
        :type s2: str
        :rtype: bool
        """
        if len(s2) < len(s1):
            return False

        s1_map = {}
        for i in range(0, len(s1)):
            character = s1[i]
            if character not in s1_map:
                s1_map[character] = 1
            else:
                s1_map[character] += 1


        length_of_s1 = len(s1)
        s2_map = {}
        current_str = s2[0:length_of_s1-1]
        for character in current_str:
            if character in s2_map:
                s2_map[character] += 1
            else:
                s2_map[character] = 1

        start = 0
        end = length_of_s1 - 1
        while end < len(s2):
            # Add new char
            new_char = s2[end]
            if new_char not in s2_map:
                s2_map[new_char] = 1
            else:
                s2_map[new_char] += 1

            #Check maps
            if s2_map == s1_map:
                return True

            #remove first char
            first_word = s2[start]
            s2_map[first_word] -= 1
            start += 1
            if s2_map[first_word] == 0:
                s2_map.pop(first_word)

            #Increment end
            end += 1
        return False

my_sol = Solution()

s1 = "ab"
s2 = "eidbaooo"
print(my_sol.checkInclusion(s1, s2)) #True

s1= "ab"
s2 = "eboaoo"
print(my_sol.checkInclusion(s1, s2)) #False

s1 = "dac"
s2 = "adac"
print(my_sol.checkInclusion(s1, s2)) #True

s1 = "vxqakfyaqahufxfizupjrkkifjlbfqfeprqrfjvxnubntdtlvz"
s2 = ""
print(my_sol.checkInclusion(s1, s2)) #true

s1 = "hello"
s2 = "ooolleoooleh"
print(my_sol.checkInclusion(s1, s2)) #False


